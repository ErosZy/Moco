{"version":3,"sources":["Vec3.js","Util.js","Matrix3.js","Timer.js","Event.js","Global.js","EventDispatcher.js","InteractiveEvent.js","TouchEvent.js","DisplayObject.js","InteractiveObject.js","DisplayObjectContainer.js","Shape.js","Sprite.js","Stage.js","LoaderEvent.js","BitmapData.js","Loader.js","Bitmap.js","URLLoaderEvent.js","URLLoader.js","URLRequest.js","Label.js","Easing.js","Animate.js","Moco.js"],"names":["Vec3","x","y","z","Math","sqrt","k","vec3","clone","multi","add","m","matrix","getMatrix","v1","v2","c1","c2","rad","distance","acos","v","vii","zero","sub","Error","module","exports","Util","target","type","Object","prototype","toString","call","arr","callback","isType","Array","forEach","i","len","length","key","hasOwnProperty","filter","tmp","each","item","index","push","map","some","bol","deg","PI","obj","keys","fn","arguments","source","prop","argv","slice","extends","point","vs","isInside","j","xi","yi","xj","yj","Matrix3","_matrix","matrix3","b00","b10","b20","b01","b11","b21","b02","b12","b22","a00","a10","a20","a01","a11","a21","a02","a12","a22","angle","cosa","cos","sina","sin","scaleX","scaleY","m1","m2","setMatrix","every","deter","transpose","Timer","timerObject","inArray","_list","aIndex","splice","isStoped","_isInit","_init","_raf","_craf","lastTime","vendors","requestAnimationFrame","window","cancelAnimationFrame","now","Date","nextTime","max","setTimeout","clearTimeout","_requestAnimationFrame","_cancelAnimationFrame","_timer","_callback","bind","list","tick","_isStoped","_list_","_isInit_","isInit","_timer_","timer","_requestAnimationFrame_","_cancelAnimationFrame_","Global","_guid","guid","Number","MAX_VALUE","maxNumber","minNumber","returnTrue","returnFalse","EventDispatcher","eventName","useCapture","on","handlers","callbacks","ev","_normalization","event","isImmediatePropagationStopped","_fnStr","_fntStr","replace","fnRegExp","_useCapture","addEventListener","off","fnStr","currentTarget","parent","parentNode","handlerList","useCaptures","unshift","propagations","prevTarget","eventPhase","handler","isPropagationStopped","isUseCapturePhaseStopped","preventDefault","stopPropagation","stopImmediatePropagation","srcElement","document","relatedTarget","fromElement","toElement","returnValue","isDefaultPrevented","defaultPrevented","cancelBubble","clientX","clientY","targetTouches","touch","InteractiveEvent","a1","a2","TouchEvent","cord","items","visible","alpha","isMouseOn","sort","objectIndex","split","touchEvents","nameList","DisplayObject","name","globalCompositeOperation","_mask","_x","_y","_rotate","_scaleX","_scaleY","_height","_width","_alpha","_addedToStage","identity","apply","ctx","stage","rotate","mask","save","show","clip","globalAlpha","translation","translate","rotation","deg2rad","scaling","scale","_triggerAddToStageEvent","trigger","Event","ADD_TO_STAGE","InteractiveObject","eventNameUpperCase","toUpperCase","remove","eventNameLowerCase","toLowerCase","DisplayObjectContainer","_childList","child","abs","restore","ENTER_FRAME","dispose","childList","sv","maxNumberVec3","minNumberVec3","getBounds","bounds","Shape","_showList","_setList","error","showList","showListItem","thickness","lineWidth","color","strokeStyle","stroke","beginPath","closePath","moveTo","lineTo","width","height","rect","fillStyle","fill","r","sAngle","eAngle","direct","arc","lineColor","arcArgs","isFill","rectArgs","vertices","pointArr","points","vec","inverse","multiMatrix3","setList","area","minRect","_computeArcMinRect","s1v","s2v","e2v","e1v","pip","sx","ex","sy","ey","vec3s","ox","oy","rad2deg","floor","rotateAngle","o1","o2","o","min","translateMat","rotateMat","mat","Sprite","_graphics","graphics","shapeBounds","Stage","instance","loop","getContext","domElem","canvas","parseFloat","offset","_getOffset","left","top","_initialize","_touchEvent","start","clearRect","addStage","getAllChild","childs","getTopItem","BitmapData","wx","createCanvas","_source","_ctx","_locked","_imageData","bmd","draw","drawImage","ImageData","Uint8ClampedArray","imageData","data","getImageData","startIndex","getPixels","putImageData","Loader","content","createImage","_close","_loading","_queue","request","method","url","params","val","encodeURIComponent","join","onload","_onload","onerror","_onerror","src","LoaderEvent","COMPLETE","_next","ERROR","load","shift","Bitmap","bitmapData","_bitmapData","transform","URLLoader","_request","xhr","XMLHttpRequest","e","_xhr","open","onreadystatechange","_onreadystatechange","contentType","requestHeaders","setRequestHeader","send","readyState","URLLoaderEvent","status","responseText","URLRequest","Label","_color","_textAlign","_text","_textBaseline","_font","_size","_wordWrap","_fontHeight","_fillX","_areas","_bindEvents","font","textAlign","textBaseline","text","areas","fontHeight","fillText","_compute","textLen","_computeLineHeight","concat","_computeAreas","getTextLineHeight","cache","tWidth","count","char","charAt","measureText","size","wordWrap","a","b","Animate","_addQueue","fParams","tParams","animator","_animators","_pausedAnimators","timestamp","_animate","_isAnimated","attr","fnParams","speed","Easing","easeInSine","args","shouldStop","timeCount","origin","t","pa","pb","pc","pd","pow","attrs","_cubicBezier","stop","_animators_","_pausedAnimators_","_isAnimated_","isAnimated","Moco"],"mappings":"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","file":"Moco.map","sourceRoot":"../src","sourcesContent":["class Vec3 {\n  constructor(x, y, z) {\n    this.x = x || 0;\n    this.y = y || 0;\n    this.z = z || 0;\n  }\n\n  distance() {\n    let { x, y, z } = this;\n    return Math.sqrt(x * x + y * y + z * z);\n  }\n\n  multi(k) {\n    if (k instanceof Vec3) {\n      let { x, y, z } = k;\n      return this.x * x + this.y * y + this.z * z;\n    } else {\n      this.x *= k;\n      this.y *= k;\n      this.z *= k;\n    }\n\n    return this;\n  }\n\n  divi(k) {\n    if (k instanceof Vec3) {\n      let { x, y, z } = k;\n      return this.x / x + this.y / y + this.z / z;\n    } else {\n      this.x /= k;\n      this.y /= k;\n      this.z /= k;\n    }\n\n    return this;\n  }\n\n  add(vec3) {\n    this.x += vec3.x;\n    this.y += vec3.y;\n    this.z += vec3.z;\n    return this;\n  }\n\n  sub(vec3) {\n    let clone = Vec3.clone(vec3);\n    clone.multi(-1);\n    this.add(clone);\n    return this;\n  }\n\n  multiMatrix3(m) {\n    let matrix = m.getMatrix();\n    let { x, y, z } = this;\n    this.x = x * matrix[0] + y * matrix[3] + z * matrix[6];\n    this.y = x * matrix[1] + y * matrix[4] + z * matrix[7];\n    this.z = x * matrix[2] + y * matrix[5] + z * matrix[8];\n    return this;\n  }\n\n  static zero() {\n    return new Vec3(0, 0, 0);\n  }\n\n  static clone(vec3) {\n    return new Vec3(vec3.x, vec3.y, vec3.z);\n  }\n\n  static angle(v1, v2) {\n    let c1 = Vec3.clone(v1);\n    let c2 = Vec3.clone(v2);\n    let rad = c1.multi(c2) / (v1.distance() * v2.distance());\n    return Math.acos(rad);\n  }\n\n  static equal(v1, v2) {\n    return v1.x === v2.x && v1.y === v2.y && v1.z === v2.z;\n  }\n\n  static crossProduct(v1, v2) {\n    return new Vec3(\n      v1.y * v2.z - v1.z * v2.y,\n      v1.z * v2.x - v1.x * v2.z,\n      v1.x * v2.y - v1.y * v2.x\n    );\n  }\n\n  static proj(v1, v2) {\n    let v = Vec3.clone(v2);\n    let distance = v.distance();\n    let vii = v.multi(\n      Vec3.zero()\n        .add(v1)\n        .multi(v) /\n        (distance * distance)\n    );\n    return v1.sub(vii);\n  }\n\n  static norm(vec3) {\n    let clone = Vec3.clone(vec3);\n    let distance = clone.distance();\n    if (distance) {\n      return clone.multi(1 / distance);\n    } else {\n      throw new Error(\"zero vec3 cant be norm\");\n    }\n  }\n}\n\nmodule.exports = Vec3;\n","class Util {\n  static isType(target, type) {\n    return Object.prototype.toString.call(target) === \"[object \" + type + \"]\";\n  }\n\n  static each(arr, callback) {\n    if (this.isType(arr, \"Array\") && Array.prototype.forEach) {\n      Array.prototype.forEach.call(arr, callback);\n    } else if (this.isType(arr, \"Array\")) {\n      for (let i = 0, len = arr.length; i < len; i += 1) {\n        callback(arr[i], i, arr);\n      }\n    } else if (this.isType(arr, \"Object\")) {\n      for (let key in arr) {\n        if (arr.hasOwnProperty(key)) {\n          callback(arr[key], key, arr);\n        }\n      }\n    }\n  }\n\n  static filter(arr, callback) {\n    if (this.isType(arr, \"Array\") && Array.prototype.filter) {\n      return Array.prototype.filter.call(arr, callback);\n    } else {\n      let tmp = [];\n      this.each(arr, (item, index, arr) => {\n        if (callback.call(arr, item, index, arr) === true) {\n          tmp.push(item);\n        }\n      });\n      return tmp;\n    }\n  }\n\n  static map(arr, callback) {\n    if (this.isType(arr, \"Array\") && Array.prototype.map) {\n      return Array.prototype.map.call(arr, callback);\n    } else {\n      let tmp = [];\n      this.each(arr, (item, index, arr) => {\n        tmp.push(callback.call(arr, item, index, arr));\n      });\n      return tmp;\n    }\n  }\n\n  static some(arr, callback) {\n    if (this.isType(arr, \"Array\") && Array.prototype.some) {\n      return Array.prototype.some.call(arr, callback);\n    } else {\n      let bol = false;\n      this.each(arr, (item, index, arr) => {\n        if (callback.call(arr, item, index, arr) === true) {\n          bol = true;\n        }\n      });\n      return bol;\n    }\n  }\n\n  static every(arr, callback) {\n    if (this.isType(arr, \"Array\") && Array.prototype.some) {\n      return Array.prototype.some.call(arr, callback);\n    } else {\n      let bol = true;\n      this.each(arr, (item, index, arr) => {\n        if (!callback.call(arr, item, index, arr)) {\n          bol = false;\n        }\n      });\n      return bol;\n    }\n  }\n\n  static deg2rad(deg) {\n    return (deg * Math.PI) / 180;\n  }\n\n  static rad2deg(rad) {\n    return (rad / Math.PI) * 180;\n  }\n\n  static keys(obj) {\n    let keys = [];\n    if (obj) {\n      if (Object.keys) {\n        return Object.keys(obj);\n      } else {\n        for (let key in obj) {\n          if (obj.hasOwnProperty(key)) {\n            keys.push(key);\n          }\n        }\n      }\n    }\n    return keys;\n  }\n\n  static inArray(item, arr, fn) {\n    for (let i = 0, len = arr.length; i < len; i += 1) {\n      if (typeof fn === \"function\") {\n        if (fn.call(item, item, arr[i], i, arr)) {\n          return i;\n        }\n      } else if (arr[i] === item) {\n        return i;\n      }\n    }\n    return -1;\n  }\n\n  static extends(obj) {\n    if (!this.isType(obj, \"Object\")) {\n      return obj;\n    }\n\n    for (let i = 1, length = arguments.length; i < length; i += 1) {\n      let source = arguments[i];\n      for (let prop in source) {\n        if (source.hasOwnProperty(prop)) {\n          obj[prop] = source[prop];\n        }\n      }\n    }\n\n    return obj;\n  }\n\n  static toArray(argv) {\n    if (argv && argv.length && argv[0]) {\n      return Array.prototype.slice.call(argv, 0, argv.length);\n    } else {\n      return [];\n    }\n  }\n\n  static clone(obj) {\n    if (typeof obj !== \"object\") {\n      return obj;\n    }\n    return this.isType(obj, \"Array\")\n      ? Array.prototype.slice.call(obj)\n      : this.extends({}, obj);\n  }\n\n  // ray-casting algorithm\n  // http://www.ecse.rpi.edu/Homepages/wrf/Research/Short_Notes/pnpoly.html\n  static pip(point, vs) {\n    let isInside = false;\n    let x = point[0],\n      y = point[1];\n    for (let i = 0, j = vs.length - 1; i < vs.length; j = i, i += 1) {\n      let xi = vs[i][0],\n        yi = vs[i][1];\n      let xj = vs[j][0],\n        yj = vs[j][1];\n\n      let intersect =\n        yi > y !== yj > y && x < ((xj - xi) * (y - yi)) / (yj - yi) + xi;\n      if (intersect) {\n        isInside = !isInside;\n      }\n    }\n    return isInside;\n  }\n}\n\nmodule.exports = Util;\n","import Util from \"./Util\";\n\nclass Matrix3 {\n  constructor(m) {\n    this._matrix = m || [1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0];\n  }\n\n  setMatrix(matrix) {\n    this._matrix = matrix;\n    return this;\n  }\n\n  getMatrix() {\n    return this._matrix;\n  }\n\n  add(matrix3) {\n    let matrix = matrix3._matrix;\n\n    this._matrix[0] += matrix[0];\n    this._matrix[1] += matrix[1];\n    this._matrix[2] += matrix[2];\n\n    this._matrix[3] += matrix[3];\n    this._matrix[4] += matrix[4];\n    this._matrix[5] += matrix[5];\n\n    this._matrix[6] += matrix[6];\n    this._matrix[7] += matrix[7];\n    this._matrix[8] += matrix[8];\n\n    return this;\n  }\n\n  sub(matrix3) {\n    let matrix = matrix3._matrix;\n\n    this._matrix[0] -= matrix[0];\n    this._matrix[1] -= matrix[1];\n    this._matrix[2] -= matrix[2];\n\n    this._matrix[3] -= matrix[3];\n    this._matrix[4] -= matrix[4];\n    this._matrix[5] -= matrix[5];\n\n    this._matrix[6] -= matrix[6];\n    this._matrix[7] -= matrix[7];\n    this._matrix[8] -= matrix[8];\n\n    return this;\n  }\n\n  multi(matrix3) {\n    let matrix = matrix3._matrix;\n\n    let b00 = matrix[0];\n    let b10 = matrix[1];\n    let b20 = matrix[2];\n\n    let b01 = matrix[3];\n    let b11 = matrix[4];\n    let b21 = matrix[5];\n\n    let b02 = matrix[6];\n    let b12 = matrix[7];\n    let b22 = matrix[8];\n\n    matrix = this._matrix;\n\n    let a00 = matrix[0];\n    let a10 = matrix[1];\n    let a20 = matrix[2];\n\n    let a01 = matrix[3];\n    let a11 = matrix[4];\n    let a21 = matrix[5];\n\n    let a02 = matrix[6];\n    let a12 = matrix[7];\n    let a22 = matrix[8];\n\n    matrix[0] = a00 * b00 + a01 * b10 + a02 * b20;\n    matrix[1] = a10 * b00 + a11 * b10 + a12 * b20;\n    matrix[2] = a20 * b00 + a21 * b10 + a22 * b20;\n\n    matrix[3] = a00 * b01 + a01 * b11 + a02 * b21;\n    matrix[4] = a10 * b01 + a11 * b11 + a12 * b21;\n    matrix[5] = a20 * b01 + a21 * b11 + a22 * b21;\n\n    matrix[6] = a00 * b02 + a01 * b12 + a02 * b22;\n    matrix[7] = a10 * b02 + a11 * b12 + a12 * b22;\n    matrix[8] = a20 * b02 + a21 * b12 + a22 * b22;\n\n    return this;\n  }\n\n  translate(x, y) {\n    this._matrix[6] = x;\n    this._matrix[7] = y;\n\n    return this;\n  }\n\n  rotate(angle) {\n    let cosa = Math.cos((angle * Math.PI) / 180);\n    let sina = Math.sin((angle * Math.PI) / 180);\n    this._matrix[0] = cosa;\n    this._matrix[1] = sina;\n    this._matrix[3] = -sina;\n    this._matrix[4] = cosa;\n\n    return this;\n  }\n\n  scale(scaleX, scaleY) {\n    this._matrix[0] = scaleX;\n    this._matrix[4] = scaleY;\n\n    return this;\n  }\n\n  static clone(m) {\n    let matrix = m.getMatrix();\n    let tmp = [];\n\n    for (let i = 0, len = matrix.length; i < len; i += 1) {\n      tmp[i] = matrix[i];\n    }\n\n    return new Matrix3(tmp);\n  }\n\n  static copy(m1, m2) {\n    let clone = Matrix3.clone(m2);\n    m1.setMatrix(clone.getMatrix());\n  }\n\n  static zero() {\n    return new Matrix3([0, 0, 0, 0, 0, 0, 0, 0, 0]);\n  }\n\n  static isZero(matrix) {\n    matrix = matrix.getMatrix();\n    return Util.every(matrix, item => {\n      return item === 0;\n    });\n  }\n\n  static identity() {\n    return new Matrix3([1, 0, 0, 0, 1, 0, 0, 0, 1]);\n  }\n\n  static isIdentity(matrix) {\n    matrix = matrix.getMatrix();\n    return Util.every(matrix, (item, index) => {\n      if (index % 4 === 0) {\n        return item === 1;\n      } else {\n        return item === 0;\n      }\n    });\n  }\n\n  static translation(x, y) {\n    return new Matrix3([1, 0, 0, 0, 1, 0, x, y, 1]);\n  }\n\n  static rotation(angle) {\n    let cosa = Math.cos((angle * Math.PI) / 180);\n    let sina = Math.sin((angle * Math.PI) / 180);\n    return new Matrix3([cosa, sina, 0, -sina, cosa, 0, 0, 0, 1]);\n  }\n\n  static scaling(scaleX, scaleY) {\n    return new Matrix3([scaleX, 0, 0, 0, scaleY, 0, 0, 0, 1]);\n  }\n\n  static transpose(m) {\n    let matrix = m.getMatrix();\n    let tmp = matrix[1];\n\n    matrix[1] = matrix[3];\n    matrix[3] = tmp;\n\n    tmp = matrix[2];\n    matrix[2] = matrix[6];\n    matrix[6] = tmp;\n\n    tmp = matrix[5];\n    matrix[5] = matrix[7];\n    matrix[7] = tmp;\n\n    m.setMatrix(matrix);\n  }\n\n  static inverse(m) {\n    let matrix = m.getMatrix();\n\n    let a00 = matrix[0];\n    let a01 = matrix[1];\n    let a02 = matrix[2];\n\n    let a10 = matrix[3];\n    let a11 = matrix[4];\n    let a12 = matrix[5];\n\n    let a20 = matrix[6];\n    let a21 = matrix[7];\n    let a22 = matrix[8];\n\n    let deter =\n      a00 * a11 * a22 +\n      a01 * a12 * a20 +\n      a02 * a10 * a21 -\n      a02 * a11 * a20 -\n      a01 * a10 * a22 -\n      a00 * a12 * a21;\n\n    let c00 = (a11 * a22 - a21 * a12) / deter;\n    let c01 = -(a10 * a22 - a20 * a12) / deter;\n    let c02 = (a10 * a21 - a20 * a11) / deter;\n\n    let c10 = -(a01 * a22 - a21 * a02) / deter;\n    let c11 = (a00 * a22 - a20 * a02) / deter;\n    let c12 = -(a00 * a21 - a20 * a01) / deter;\n\n    let c20 = (a01 * a12 - a11 * a02) / deter;\n    let c21 = -(a00 * a12 - a10 * a02) / deter;\n    let c22 = (a00 * a11 - a10 * a01) / deter;\n\n    matrix = new Matrix3([c00, c01, c02, c10, c11, c12, c20, c21, c22]);\n\n    Matrix3.transpose(matrix);\n\n    return matrix;\n  }\n}\n\nmodule.exports = Matrix3;\n","import Util from \"./Util\";\n\nclass Timer {\n  static add(timerObject) {\n    let index = Util.inArray(timerObject, this._list, (obj, item) => {\n      return obj.aIndex === item.aIndex;\n    });\n\n    if (index === -1) {\n      this._list.push(timerObject);\n    }\n\n    return this;\n  }\n\n  static remove(timerObject) {\n    let index = Util.inArray(timerObject, this._list, (obj, item) => {\n      return obj.aIndex === item.aIndex;\n    });\n\n    if (index !== -1) {\n      this._list.splice(index, 1);\n    }\n\n    return this;\n  }\n\n  static start() {\n    this.isStoped = false;\n\n    if (!this._isInit) {\n      this._init();\n    }\n\n    this._raf();\n    return this;\n  }\n\n  static stop() {\n    this.isStoped = true;\n\n    if (!this._isInit) {\n      this._init();\n    }\n\n    this._craf();\n    return this;\n  }\n\n  static _init() {\n    let lastTime = 0;\n    let vendors = [\"webkit\", \"moz\"];\n    let requestAnimationFrame = window.requestAnimationFrame;\n    let cancelAnimationFrame = window.cancelAnimationFrame;\n    let i = vendors.length - 1;\n\n    while (i >= 0 && !requestAnimationFrame) {\n      requestAnimationFrame = window[vendors[i] + \"RequestAnimationFrame\"];\n      cancelAnimationFrame = window[vendors[i] + \"CancelAnimationFrame\"];\n      i -= 1;\n    }\n\n    if (!requestAnimationFrame || !cancelAnimationFrame) {\n      requestAnimationFrame = callback => {\n        let now = +new Date(),\n          nextTime = Math.max(lastTime + 16, now);\n        return setTimeout(() => {\n          callback((lastTime = nextTime));\n        }, nextTime - now);\n      };\n\n      cancelAnimationFrame = clearTimeout;\n    }\n\n    this._requestAnimationFrame = requestAnimationFrame;\n    this._cancelAnimationFrame = cancelAnimationFrame;\n    this._isInit = true;\n  }\n\n  static _raf() {\n    this._timer = this._requestAnimationFrame.call(\n      window,\n      this._callback.bind(this)\n    );\n  }\n\n  static _craf() {\n    this._cancelAnimationFrame.call(window, this._timer);\n  }\n\n  static _callback() {\n    let list = this._list;\n    for (let i = 0, len = list.length; i < len; i += 1) {\n      let item = list[i];\n      if (item.tick) {\n        item.tick();\n      }\n    }\n    this._raf();\n  }\n\n  static get isStoped() {\n    return this._isStoped;\n  }\n\n  static set isStoped(isStoped) {\n    this._isStoped = isStoped;\n  }\n\n  static get _list() {\n    this._list_ = this._list_ || [];\n    return this._list_;\n  }\n\n  static set _list(list) {\n    this._list_ = list;\n  }\n\n  static get _isInit() {\n    return this._isInit_ || false;\n  }\n\n  static set _isInit(isInit) {\n    this._isInit_ = isInit;\n  }\n\n  static get _timer() {\n    return this._timer_;\n  }\n\n  static set _timer(timer) {\n    this._timer_ = timer;\n  }\n\n  static get _requestAnimationFrame() {\n    return this._requestAnimationFrame_;\n  }\n\n  static set _requestAnimationFrame(requestAnimationFrame) {\n    this._requestAnimationFrame_ = requestAnimationFrame;\n  }\n\n  static get _cancelAnimationFrame() {\n    return this._cancelAnimationFrame_;\n  }\n\n  static set _cancelAnimationFrame(cancelAnimationFrame) {\n    this._cancelAnimationFrame_ = cancelAnimationFrame;\n  }\n}\n\nmodule.exports = Timer;\n","module.exports = {\n  ADD_TO_STAGE: \"add_to_stage\",\n  ENTER_FRAME: \"enter_frame\"\n};\n","import Vec3 from \"./Vec3\";\n\nexport default class Global {\n  static get guid() {\n    this._guid = this._guid || 0;\n    return this._guid;\n  }\n\n  static set guid(guid) {\n    this._guid = guid;\n  }\n\n  static get fnRegExp() {\n    return /\\s+/g;\n  }\n\n  static get maxNumber() {\n    return Number.MAX_VALUE;\n  }\n\n  static get minNumber() {\n    return -1 * Number.MAX_VALUE;\n  }\n\n  static get maxNumberVec3() {\n    let maxNumber = Number.MAX_VALUE;\n    return new Vec3(maxNumber, maxNumber, 1);\n  }\n\n  static get minNumberVec3() {\n    let minNumber = -1 * Number.MAX_VALUE;\n    return new Vec3(minNumber, minNumber, 1);\n  }\n}\n","import Global from \"./Global\";\nimport Util from \"./Util\";\n\nconst returnTrue = () => {\n  return true;\n};\n\nconst returnFalse = () => {\n  return false;\n};\n\nclass EventDispatcher {\n  on(target, eventName, callback, useCapture) {\n    if (typeof target === \"string\") {\n      [target, eventName, callback, useCapture] = [\n        this,\n        target,\n        eventName,\n        callback\n      ];\n    }\n\n    if (eventName && callback) {\n      useCapture = useCapture ? useCapture : false;\n      if (Util.isType(eventName, \"Array\")) {\n        Util.each(eventName, item => {\n          EventDispatcher.prototype.on.call(this, item, callback, useCapture);\n        });\n      } else {\n        let handlers = target.handlers;\n        let fn = event => {\n          let callbacks = handlers[eventName];\n          let ev = this._normalization(event);\n\n          for (let i = 0, len = callbacks.length; i < len; i += 1) {\n            let item = callbacks[i];\n            if (ev.isImmediatePropagationStopped()) {\n              break;\n            } else if (item._guid === fn._guid) {\n              item._callback.call(this, ev);\n            }\n          }\n        };\n\n        fn._fnStr = callback._fntStr\n          ? callback._fnStr\n          : callback.toString().replace(Global.fnRegExp, \"\");\n        fn._callback = callback;\n        fn._useCapture = useCapture;\n        fn._guid = Global.guid;\n        Global.guid += 1;\n\n        if (!handlers) {\n          handlers = target.handlers = {};\n        }\n\n        if (!handlers[eventName]) {\n          handlers[eventName] = [];\n        }\n\n        handlers[eventName].push(fn);\n\n        if (handlers[eventName].length) {\n          if (target.addEventListener) {\n            target.addEventListener(eventName, fn, useCapture);\n          }\n        }\n      }\n    }\n\n    return this;\n  }\n\n  off(target, eventName, callback) {\n    if (typeof target === \"string\") {\n      [target, eventName, callback] = [this, target, eventName];\n    }\n\n    if (eventName || callback) {\n      if (Util.isType(eventName, \"Array\")) {\n        Util.each(eventName, item => {\n          EventDispatcher.prototype.off.call(this, target, item, callback);\n        });\n      } else if (!callback) {\n        let handlers = target.handlers;\n        if (handlers) {\n          let callbacks = handlers[eventName] ? handlers[eventName] : [];\n          Util.each(callbacks, item => {\n            EventDispatcher.prototype.off.call(this, target, eventName, item);\n          });\n        }\n      } else {\n        let handlers = target.handlers;\n        if (handlers) {\n          let fnStr = callback._fnStr\n            ? callback._fnStr\n            : callback.toString().replace(Global.fnRegExp, \"\");\n          let callbacks = handlers[eventName] ? handlers[eventName] : [];\n\n          for (let i = callbacks.length - 1; i >= 0; i -= 1) {\n            let item = callbacks[i];\n            if (item._fnStr === fnStr) {\n              Array.prototype.splice.call(callbacks, i, 1);\n            }\n          }\n        }\n      }\n    }\n\n    return this;\n  }\n\n  trigger(target, eventName, event) {\n    if (!target && !eventName) {\n      return;\n    } else if (typeof target === \"string\") {\n      [target, eventName, event] = [this, target, eventName];\n    }\n\n    let handlers = target && target.handlers;\n    if (!handlers) {\n      return this;\n    }\n\n    let callbacks = handlers[eventName] ? handlers[eventName] : [];\n    if (!callbacks.length) {\n      return this;\n    }\n\n    let ev = event || {};\n    if (ev.target === null) {\n      ev.target = ev.currentTarget = target;\n    }\n\n    ev = this._normalization(ev);\n\n    let parent = target.parent || target.parentNode;\n    let handlerList = {\n      propagations: [],\n      useCaptures: []\n    };\n\n    while (parent) {\n      let handlers = parent.handlers;\n      if (handlers) {\n        let callbacks = handlers[eventName] ? handlers[eventName] : [];\n        for (let i = 0, len = callbacks.length; i < len; i += 1) {\n          let useCapture = callbacks[i]._useCapture;\n          if (!useCapture) {\n            handlerList.propagations.push({\n              target: parent,\n              callback: callbacks[i]\n            });\n          } else {\n            let tmp = {\n              target: parent,\n              callback: callbacks[i]\n            };\n\n            if (!i) {\n              handlerList.useCaptures.unshift(tmp);\n            } else {\n              handlerList.useCaptures.splice(1, 0, tmp);\n            }\n          }\n        }\n      }\n      parent = parent.parent || parent.parentNode;\n    }\n\n    let useCaptures = handlerList.useCaptures;\n    let prevTarget = null;\n    ev.eventPhase = 0;\n    for (let i = 0, len = useCaptures.length; i < len; i += 1) {\n      let handler = useCaptures[i];\n      target = handler.target;\n\n      if (ev.isImmediatePropagationStopped()) {\n        break;\n      } else if (prevTarget === target && ev.isPropagationStopped()) {\n        handler.callback.call(this, ev);\n      } else {\n        handler.callback.call(this, ev);\n        prevTarget = target;\n      }\n    }\n\n    let isUseCapturePhaseStopped = false;\n    if (useCaptures.length) {\n      isUseCapturePhaseStopped =\n        ev.isImmediatePropagationStopped() || ev.isPropagationStopped();\n    }\n\n    ev.eventPhase = 1;\n    for (let i = 0, len = callbacks.length; i < len; i += 1) {\n      let item = callbacks[i];\n      if (isUseCapturePhaseStopped) {\n        break;\n      } else {\n        item.call(this, ev);\n      }\n    }\n\n    let propagations = handlerList.propagations;\n    prevTarget = null;\n    ev.eventPhase = 2;\n    for (let i = 0, len = propagations.length; i < len; i += 1) {\n      let handler = propagations[i];\n      target = handler.target;\n      ev.target = target;\n      if (isUseCapturePhaseStopped) {\n        if (ev.isImmediatePropagationStopped() || ev.isPropagationStopped()) {\n          break;\n        } else {\n          handler.callback.call(this, ev);\n          prevTarget = target;\n        }\n      } else {\n        if (ev.isImmediatePropagationStopped()) {\n          break;\n        } else if (ev.isPropagationStopped()) {\n          if (prevTarget === target) {\n            handler.callback.call(this, ev);\n          } else {\n            break;\n          }\n        } else {\n          handler.callback.call(this, ev);\n          prevTarget = target;\n        }\n      }\n    }\n  }\n\n  _normalization(event) {\n    if (!event || !event.isPropagationStopped) {\n      event = event ? event : {};\n\n      let preventDefault = event.preventDefault;\n      let stopPropagation = event.stopPropagation;\n      let stopImmediatePropagation = event.stopImmediatePropagation;\n\n      if (!event.target) {\n        event.target = event.srcElement || document;\n      }\n\n      if (!event.currentTarget) {\n        event.currentTarget = this;\n      }\n\n      event.relatedTarget =\n        event.fromElement === event.target\n          ? event.toElement\n          : event.fromElement;\n\n      event.preventDefault = () => {\n        if (preventDefault) {\n          preventDefault.call(event);\n        }\n        event.returnValue = false;\n        event.isDefaultPrevented = returnTrue;\n        event.defaultPrevented = true;\n      };\n\n      event.isDefaultPrevented = returnFalse;\n      event.defaultPrevented = false;\n\n      event.stopPropagation = () => {\n        if (stopPropagation) {\n          stopPropagation.call(event);\n        }\n        event.cancelBubble = true;\n        event.isPropagationStopped = returnTrue;\n      };\n\n      event.isPropagationStopped = returnFalse;\n\n      event.stopImmediatePropagation = () => {\n        if (stopImmediatePropagation) {\n          stopImmediatePropagation.call(event);\n        }\n        event.isImmediatePropagationStopped = returnTrue;\n        event.stopPropagation();\n      };\n\n      event.isImmediatePropagationStopped = returnFalse;\n\n      let clientX = 0;\n      let clientY = 0;\n      if (event.targetTouches && event.targetTouches.length >= 1) {\n        const touch = event.targetTouches[0];\n        clientX = touch.clientX;\n        clientY = touch.clientY;\n      }\n      event = Util.extends(event, { clientX, clientY });\n    }\n\n    return event;\n  }\n}\n\nmodule.exports = EventDispatcher;\n","import Util from \"./Util\";\nimport EventDispatcher from \"./EventDispatcher\";\n\nclass InteractiveEvent {\n  static getList() {\n    return Util.clone(this._list);\n  }\n\n  static add(eventName, item) {\n    if (item instanceof EventDispatcher) {\n      let list = this._list;\n      list[eventName] = list[eventName] ? list[eventName] : [];\n\n      let isNotExists =\n        Util.inArray(item, list[eventName], (a1, a2) => {\n          return a1.aIndex === a2.aIndex;\n        }) === -1;\n\n      if (isNotExists) {\n        list[eventName].push(item);\n      }\n    }\n  }\n\n  static remove(eventName, item) {\n    if (item instanceof EventDispatcher) {\n      let list = this._list;\n      if (list[eventName]) {\n        let index = Util.inArray(item, list[eventName], (a1, a2) => {\n          return a1.aIndex === a2.aIndex;\n        });\n\n        if (index !== -1) {\n          list[eventName].splice(index, 1);\n        }\n      }\n    }\n  }\n\n  static get _list() {\n    this._list_ = this._list_ || {};\n    return this._list_;\n  }\n\n  static set _list(list) {\n    this._list_ = list;\n  }\n}\n\nmodule.exports = InteractiveEvent;\n","import InteractiveEvent from \"./InteractiveEvent\";\nimport Util from \"./Util\";\n\nclass TouchEvent extends InteractiveEvent {\n  static getTopItem(eventName, cord) {\n    let items = this._list[eventName] || [];\n\n    items = Util.filter(items, item => {\n      if (item.visible && item.alpha && item.isMouseOn && item.isMouseOn(cord)) {\n        return true;\n      }\n    });\n\n    items = Array.prototype.sort.call(items, (i, j) => {\n      let a1 = i.objectIndex.split(\".\");\n      let a2 = j.objectIndex.split(\".\");\n      let len = Math.max(a1.length, a2.length);\n\n      for (let k = 0; k < len; k += 1) {\n        if (!a2[k] || !a1[k]) {\n          return a2[k] ? 1 : -1;\n        } else if (a2[k] !== a1[k]) {\n          return a2[k] - a1[k];\n        }\n      }\n    });\n\n    return items[0];\n  }\n}\n\nlet touchEvents = {\n  TOUCHSTART: \"touchstart\",\n  TOUCHEND: \"touchend\",\n  TOUCHMOVE: \"touchmove\"\n};\n\nfor (let key in touchEvents) {\n  if (touchEvents.hasOwnProperty(key)) {\n    TouchEvent[key] = touchEvents[key];\n  }\n}\n\nTouchEvent.nameList = Util.keys(touchEvents);\nmodule.exports = TouchEvent;\n","import Global from \"./Global\";\nimport Matrix3 from \"./Matrix3\";\nimport Util from \"./Util\";\nimport EventDispatcher from \"./EventDispatcher\";\nimport Event from \"./Event\";\n\nclass DisplayObject extends EventDispatcher {\n  constructor() {\n    super();\n    this.name = \"DisplayObject\";\n    this.parent = null;\n    this.globalCompositeOperation = \"\";\n    this._mask = null;\n    this._x = 0;\n    this._y = 0;\n    this._rotate = 0;\n    this._scaleX = 1;\n    this._scaleY = 1;\n    this._height = 0;\n    this._width = 0;\n    this._alpha = 1;\n    this.visible = true;\n    this._addedToStage = false;\n    this._matrix = Matrix3.identity();\n    this.aIndex = this.objectIndex = \"\" + Global.guid;\n    Global.guid += 1;\n  }\n\n  on() {\n    super.on.apply(this, arguments);\n  }\n\n  off() {\n    super.off.apply(this, arguments);\n  }\n\n  show(matrix) {\n    let ctx = this.ctx || this.stage.ctx;\n    let { x, y, scaleX, scaleY, alpha, rotate, visible, mask } = this;\n    this._matrix = Matrix3.identity();\n    ctx.save();\n\n    if (!visible || !alpha) {\n      this._triggerAddToStageEvent();\n      return false;\n    }\n\n    if (mask !== null && mask.show) {\n      mask.show(matrix);\n      ctx.clip();\n    }\n\n    if (this.globalCompositeOperation !== \"\") {\n      ctx.globalCompositeOperation = this.globalCompositeOperation;\n    }\n\n    ctx.globalAlpha = alpha < 1 ? alpha : 1;\n    this._matrix.multi(matrix);\n\n    if (x !== 0 || y !== 0) {\n      this._matrix.multi(Matrix3.translation(x, y));\n      ctx.translate(x, y);\n    }\n\n    if (rotate !== 0) {\n      this._matrix.multi(Matrix3.rotation(rotate));\n      ctx.rotate(Util.deg2rad(rotate));\n    }\n\n    if (scaleX !== 1 || scaleY !== 1) {\n      this._matrix.multi(Matrix3.scaling(scaleX, scaleY));\n      ctx.scale(scaleX, scaleY);\n    }\n\n    this._triggerAddToStageEvent();\n    return true;\n  }\n\n  // jshint ignore:start\n\n  isMouseOn(cord) {\n    // abstrct method, child class need to realize\n  }\n\n  getBounds() {\n    // abstrct method, child class need to realize\n  }\n\n  // jshint ignore:end\n\n  dispose() {\n    this.off();\n    this._mask = null;\n  }\n\n  _triggerAddToStageEvent() {\n    if (!this._addedToStage) {\n      this._addedToStage = true;\n      this.trigger(Event.ADD_TO_STAGE);\n    }\n  }\n\n  get width() {\n    return this._width;\n  }\n\n  get height() {\n    return this._height;\n  }\n\n  get x() {\n    return this._x;\n  }\n\n  set x(x) {\n    this._x = x;\n  }\n\n  get y() {\n    return this._y;\n  }\n\n  set y(y) {\n    this._y = y;\n  }\n\n  get rotate() {\n    return this._rotate;\n  }\n\n  set rotate(rotate) {\n    this._rotate = rotate;\n  }\n\n  get scaleX() {\n    return this._scaleX;\n  }\n\n  set scaleX(scaleX) {\n    this._scaleX = scaleX;\n  }\n\n  get scaleY() {\n    return this._scaleY;\n  }\n\n  set scaleY(scaleY) {\n    this._scaleY = scaleY;\n  }\n\n  get alpha() {\n    return this._alpha;\n  }\n\n  set alpha(alpha) {\n    if (alpha > 1) {\n      alpha = 1;\n    } else if (alpha < 0.001) {\n      alpha = 0;\n    }\n    this._alpha = alpha;\n  }\n\n  get mask() {\n    return this._mask;\n  }\n\n  set mask(mask) {\n    this._mask = mask;\n  }\n}\n\nmodule.exports = DisplayObject;\n","import DisplayObject from \"./DisplayObject\";\nimport TouchEvent from \"./TouchEvent\";\nimport Util from \"./Util\";\n\nexport default class InteractiveObject extends DisplayObject {\n  constructor() {\n    super();\n    this.name = \"InteractiveObject\";\n  }\n\n  on(eventName, callback, useCapture) {\n    if (arguments.length > 1) {\n      let eventNameUpperCase = eventName.toUpperCase();\n      if (Util.inArray(eventNameUpperCase, TouchEvent.nameList) !== -1) {\n        TouchEvent.add(eventName, this);\n      }\n      super.on(this, eventName, callback, useCapture);\n    }\n  }\n\n  off(eventName, callback) {\n    if (arguments.length) {\n      let eventNameUpperCase = eventName.toUpperCase();\n      if (Util.inArray(eventNameUpperCase, TouchEvent.nameList) !== -1) {\n        TouchEvent.remove(eventName, this);\n      }\n    } else {\n      Util.each(TouchEvent.nameList, eventName => {\n        let eventNameLowerCase = eventName.toLowerCase();\n        TouchEvent.remove(eventNameLowerCase, this);\n      });\n    }\n    super.off(this, eventName, callback);\n  }\n\n  dispose(){\n    this.off();\n  }\n}\n","import InteractiveObject from \"./InteractiveObject\";\nimport DisplayObject from \"./DisplayObject\";\nimport Util from \"./Util\";\nimport Matrix3 from \"./Matrix3\";\nimport Vec3 from \"./Vec3\";\nimport Global from \"./Global\";\nimport Event from \"./Event\";\n\nclass DisplayObjectContainer extends InteractiveObject {\n  constructor() {\n    super();\n    this.name = \"DisplayObjectContainer\";\n    this._childList = [];\n  }\n\n  addChild(child) {\n    if (child instanceof DisplayObject) {\n      let isNotExists =\n        Util.inArray(child, this._childList, (child, item) => {\n          return child.aIndex === item.aIndex;\n        }) === -1;\n\n      if (isNotExists) {\n        child.parent = this;\n        child.stage = child.stage ? child.stage : this.stage;\n        child.objectIndex =\n          this.objectIndex + \".\" + (this._childList.length + 1);\n        this._childList.push(child);\n      }\n    }\n  }\n\n  removeChild(child) {\n    if (child instanceof DisplayObject) {\n      for (let i = this._childList.length - 1; i >= 0; i -= 1) {\n        let item = this._childList[i];\n        if (item.aIndex === child.aIndex) {\n          item.parent = null;\n          item.stage = null;\n          Array.prototype.splice.call(this._childList, i, 1);\n          break;\n        }\n      }\n    }\n  }\n\n  getAllChild() {\n    return Util.clone(this._childList);\n  }\n\n  getChildAt(index) {\n    let len = this._childList.length;\n    if (Math.abs(index) > len) {\n      return;\n    } else if (index < 0) {\n      index = len + index;\n    }\n    return this._childList[index];\n  }\n\n  contains(child) {\n    if (child instanceof DisplayObject) {\n      return (\n        Util.inArray(child, this._childList, (child, item) => {\n          return child.aIndex === item.aIndex;\n        }) !== -1\n      );\n    }\n  }\n\n  show(matrix) {\n    if (matrix === null) {\n      matrix = Matrix3.clone(this._matrix);\n    }\n\n    let ctx = this.ctx || this.stage.ctx;\n    if (!super.show(matrix)) {\n      return false;\n    }\n\n    for (let i = 0, len = this._childList.length; i < len; i += 1) {\n      let item = this._childList[i];\n      if (item.show) {\n        item.show(this._matrix);\n        ctx.restore();\n      }\n      item.trigger(Event.ENTER_FRAME);\n    }\n\n    this.trigger(Event.ENTER_FRAME);\n    return true;\n  }\n\n  dispose() {\n    Util.each(this._childList, child => {\n      if (child && child.dispose) {\n        child.dispose();\n      }\n    });\n    \n    this._childList = [];\n    super.dispose();\n  }\n\n  isMouseOn(cord) {\n    for (let i = 0, len = this._childList.length; i < len; i += 1) {\n      let item = this._childList[i];\n      if (item.isMouseOn && item.isMouseOn(cord)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  getBounds() {\n    let childList = this._childList;\n    let sv = Vec3.clone(Global.maxNumberVec3);\n    let ev = Vec3.clone(Global.minNumberVec3);\n\n    Util.each(childList, child => {\n      if (typeof child.getBounds === \"function\") {\n        let bounds = child.getBounds();\n        sv.x = bounds.sv.x < sv.x ? bounds.sv.x : sv.x;\n        sv.y = bounds.sv.y < sv.y ? bounds.sv.y : sv.y;\n        ev.x = bounds.ev.x > ev.x ? bounds.ev.x : ev.x;\n        ev.y = bounds.ev.y > ev.y ? bounds.ev.y : ev.y;\n      }\n    });\n\n    if (\n      sv.x === Global.maxNumber ||\n      ev.x === Global.minNumber ||\n      sv.y === Global.maxNumber ||\n      ev.y === Global.minNumber\n    ) {\n      sv = ev = Vec3.zero();\n    }\n\n    return {\n      sv: sv,\n      ev: ev\n    };\n  }\n\n  get width() {\n    let bounds = this.getBounds();\n    return Math.abs(bounds.ev.x - bounds.sv.x);\n  }\n\n  get height() {\n    let bounds = this.getBounds();\n    return Math.abs(bounds.ev.y - bounds.sv.y);\n  }\n\n  get alpha() {\n    return this._alpha;\n  }\n\n  set alpha(alpha) {\n    if (alpha > 1) {\n      alpha = 1;\n    } else if (alpha < 0.001) {\n      alpha = 0;\n    }\n\n    this._alpha = alpha;\n    for (let i = 0, len = this._childList.length; i < len; i += 1) {\n      this._childList[i].alpha = alpha;\n    }\n  }\n}\n\nmodule.exports = DisplayObjectContainer;\n","import DisplayObject from \"./DisplayObject\";\nimport Util from \"./Util\";\nimport Vec3 from \"./Vec3\";\nimport Matrix3 from \"./Matrix3\";\nimport Global from \"./Global\";\n\nclass Shape extends DisplayObject {\n  constructor() {\n    super();\n    this.name = \"Shape\";\n    this._showList = [];\n    this._setList = [];\n  }\n\n  on() {\n    console.error(\n      \"shape object can't interative event, please add shape to sprite\"\n    ); // jshint ignore:line\n  }\n\n  off() {\n    console.error(\n      \"shape object can't interative event, please add shape to sprite\"\n    ); // jshint ignore:line\n  }\n\n  show(matrix) {\n    let ctx = this.ctx || this.stage.ctx;\n    let showList = this._showList;\n    if (!super.show(matrix)) {\n      return false;\n    }\n\n    for (let i = 0, len = showList.length; i < len; i += 1) {\n      let showListItem = showList[i];\n      if (typeof showListItem === \"function\") {\n        showListItem();\n      }\n    }\n\n    return true;\n  }\n\n  lineWidth(thickness) {\n    this._showList.push(() => {\n      let ctx = this.ctx || this.stage.ctx;\n      ctx.lineWidth = thickness;\n    });\n  }\n\n  strokeStyle(color) {\n    this._showList.push(() => {\n      let ctx = this.ctx || this.stage.ctx;\n      ctx.strokeStyle = color;\n    });\n  }\n\n  stroke() {\n    this._showList.push(() => {\n      let ctx = this.ctx || this.stage.ctx;\n      ctx.stroke();\n    });\n  }\n\n  beginPath() {\n    this._showList.push(() => {\n      let ctx = this.ctx || this.stage.ctx;\n      ctx.beginPath();\n    });\n  }\n\n  closePath() {\n    this._showList.push(() => {\n      let ctx = this.ctx || this.stage.ctx;\n      ctx.closePath();\n    });\n  }\n\n  moveTo(x, y) {\n    this._showList.push(() => {\n      let ctx = this.ctx || this.stage.ctx;\n      ctx.moveTo(x, y);\n    });\n  }\n\n  lineTo(x, y) {\n    this._showList.push(() => {\n      let ctx = this.ctx || this.stage.ctx;\n      ctx.lineTo(x, y);\n    });\n  }\n\n  clear() {\n    this._showList = [];\n    this._setList = [];\n  }\n\n  rect(x, y, width, height) {\n    this._showList.push(() => {\n      let ctx = this.ctx || this.stage.ctx;\n      ctx.rect(x, y, width, height);\n    });\n\n    this._setList.push({\n      type: \"rect\",\n      area: [x, y, width, height]\n    });\n  }\n\n  fillStyle(color) {\n    this._showList.push(() => {\n      let ctx = this.ctx || this.stage.ctx;\n      ctx.fillStyle = color;\n    });\n  }\n\n  fill() {\n    this._showList.push(() => {\n      let ctx = this.ctx || this.stage.ctx;\n      ctx.fill();\n    });\n  }\n\n  arc(x, y, r, sAngle, eAngle, direct) {\n    this._showList.push(() => {\n      let ctx = this.ctx || this.stage.ctx;\n      ctx.arc(x, y, r, sAngle, eAngle, direct);\n    });\n\n    this._setList.push({\n      type: \"arc\",\n      area: [x, y, r, sAngle, eAngle, direct]\n    });\n  }\n\n  drawArc(thickness, lineColor, arcArgs, isFill, color) {\n    this._showList.push(() => {\n      let ctx = this.ctx || this.stage.ctx;\n      ctx.beginPath();\n      ctx.arc(\n        arcArgs[0],\n        arcArgs[1],\n        arcArgs[2],\n        arcArgs[3],\n        arcArgs[4],\n        arcArgs[5]\n      );\n\n      if (isFill) {\n        ctx.fillStyle = color;\n        ctx.fill();\n      }\n\n      ctx.lineWidth = thickness;\n      ctx.strokeStyle = lineColor;\n      ctx.stroke();\n    });\n\n    this._setList.push({\n      type: \"arc\",\n      area: arcArgs\n    });\n  }\n\n  drawRect(thickness, lineColor, rectArgs, isFill, color) {\n    this._showList.push(() => {\n      let ctx = this.ctx || this.stage.ctx;\n      ctx.beginPath();\n      ctx.rect(rectArgs[0], rectArgs[1], rectArgs[2], rectArgs[3]);\n\n      if (isFill) {\n        ctx.fillStyle = color;\n        ctx.fill();\n      }\n\n      ctx.lineWidth = thickness;\n      ctx.strokeStyle = lineColor;\n      ctx.stroke();\n    });\n\n    this._setList.push({\n      type: \"rect\",\n      area: rectArgs\n    });\n  }\n\n  drawVertices(thickness, lineColor, vertices, isFill, color) {\n    let len = vertices.length;\n    if (len < 3) {\n      return;\n    }\n\n    this._showList.push(() => {\n      let ctx = this.ctx || this.stage.ctx;\n      ctx.beginPath();\n      ctx.moveTo(vertices[0][0], vertices[0][1]);\n\n      for (let i = 1; i < len; i += 1) {\n        let pointArr = vertices[i];\n        ctx.lineTo(pointArr[0], pointArr[1]);\n      }\n\n      ctx.lineTo(vertices[0][0], vertices[0][1]);\n\n      if (isFill) {\n        ctx.fillStyle = color;\n        ctx.fill();\n      }\n\n      ctx.lineWidth = thickness;\n      ctx.strokeStyle = lineColor;\n      ctx.closePath();\n      ctx.stroke();\n    });\n\n    this._setList.push({\n      type: \"vertices\",\n      area: vertices\n    });\n  }\n\n  drawLine(thickness, lineColor, points) {\n    this._showList.push(() => {\n      let ctx = this.ctx || this.stage.ctx;\n      ctx.beginPath();\n      ctx.moveTo(points[0], points[1]);\n      ctx.lineTo(points[2], points[3]);\n      ctx.lineWidth = thickness;\n      ctx.strokeStyle = lineColor;\n      ctx.closePath();\n      ctx.stroke();\n    });\n  }\n\n  lineStyle(thickness, color, alpha) {\n    if (alpha) {\n      this.alpha = alpha;\n    }\n\n    this._showList.push(() => {\n      let ctx = this.ctx || this.stage.ctx;\n      ctx.lineWidth = thickness;\n      ctx.strokeStyle = color;\n    });\n  }\n\n  add(fn) {\n    this._showList.push(() => {\n      fn.call(this);\n    });\n  }\n\n  isMouseOn(cord) {\n    let vec = new Vec3(cord.x, cord.y, 1);\n    let inverse = Matrix3.inverse(this._matrix);\n    vec.multiMatrix3(inverse);\n\n    let setList = this._setList;\n    for (let i = 0, len = setList.length; i < len; i += 1) {\n      let item = setList[i];\n      let area = item.area; // jshint ignore:line\n      let minRect = {}; // jshint ignore:line\n\n      // jshint ignore:start\n      switch (item.type) {\n        case \"rect\":\n          area = [\n            [area[0], area[1]],\n            [area[0] + area[2], area[1]],\n            [area[0] + area[2], area[1] + area[3]],\n            [area[0], area[1] + area[3]]\n          ];\n        case \"vertices\":\n          break;\n        case \"arc\":\n          minRect = this._computeArcMinRect.apply(this, area);\n          area = [\n            [minRect.s1v.x, minRect.s1v.y],\n            [minRect.s2v.x, minRect.s2v.y],\n            [minRect.e2v.x, minRect.e2v.y],\n            [minRect.e1v.x, minRect.e1v.y]\n          ];\n          break;\n      }\n      // jshint ignore:end\n\n      if (Util.pip([vec.x, vec.y], area)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  getBounds() {\n    let setList = this._setList;\n    let sx = Global.maxNumber;\n    let ex = Global.minNumber;\n    let sy = Global.maxNumber;\n    let ey = Global.minNumber;\n\n    for (let i = 0, len = setList.length; i < len; i += 1) {\n      let item = setList[i];\n      let area = item.area; // jshint ignore:line\n      let minRect = {}; // jshint ignore:line\n      let vec3s = [];\n\n      // jshint ignore:start\n      switch (item.type) {\n        case \"rect\":\n          area = [\n            [area[0], area[1]],\n            [area[0] + area[2], area[1]],\n            [area[0] + area[2], area[1] + area[3]],\n            [area[0], area[1] + area[3]]\n          ];\n        case \"vertices\":\n          vec3s = Util.map(area, item => {\n            let vec = new Vec3(item[0], item[1], 1);\n            return vec.multiMatrix3(this._matrix);\n          });\n          break;\n        case \"arc\":\n          minRect = this._computeArcMinRect.apply(this, area);\n          vec3s = Util.map(minRect, item => {\n            return item.multiMatrix3(this._matrix);\n          });\n          break;\n      }\n      // jshint ignore:end\n\n      Util.each(vec3s, item => {\n        sx = item.x < sx ? item.x : sx;\n        ex = item.x > ex ? item.x : ex;\n        sy = item.y < sy ? item.y : sy;\n        ey = item.y > ey ? item.y : ey;\n      });\n    }\n\n    if (\n      sx === Global.maxNumber ||\n      ex === Global.minNumber ||\n      sy === Global.maxNumber ||\n      ey === Global.minNumber\n    ) {\n      sx = sy = ex = ey = 0;\n    }\n\n    return {\n      sv: new Vec3(sx, sy, 1),\n      ev: new Vec3(ex, ey, 1)\n    };\n  }\n\n  _computeArcMinRect(ox, oy, r, sAngle, eAngle, direct) {\n    let sx = 0;\n    let sy = 0;\n    let ex = 0;\n    let ey = 0;\n\n    sAngle = Util.rad2deg(sAngle);\n    eAngle = Util.rad2deg(eAngle);\n\n    if (Math.abs(eAngle - sAngle) / 360 >= 1) {\n      return {\n        s1v: new Vec3(ox - r, oy - r, 1),\n        s2v: new Vec3(ox + r, oy - r, 1),\n        e1v: new Vec3(ox - r, oy + r, 1),\n        e2v: new Vec3(ox + r, oy + r, 1)\n      };\n    }\n\n    sAngle = sAngle - Math.floor(sAngle / 360) * 360;\n    eAngle = eAngle - Math.floor(eAngle / 360) * 360;\n\n    if (direct) {\n      [sAngle, eAngle] = [eAngle, sAngle];\n    }\n\n    let rotateAngle = 0;\n    if (sAngle < 180 && sAngle >= 90) {\n      rotateAngle = 90;\n    } else if (sAngle < 270 && sAngle >= 180) {\n      rotateAngle = 180;\n    } else if (sAngle < 360 && sAngle >= 270) {\n      rotateAngle = 270;\n    }\n\n    sAngle -= rotateAngle;\n    eAngle -= rotateAngle;\n    sAngle = sAngle < 0 ? sAngle + 360 : sAngle;\n    eAngle = eAngle < 0 ? eAngle + 360 : eAngle;\n\n    let sin = Math.sin;\n    let cos = Math.cos;\n    let v1 = Vec3.zero();\n    let v2 = Vec3.zero();\n\n    if (eAngle < 90 && eAngle > sAngle) {\n      let o1 = Util.deg2rad(sAngle);\n      let o2 = Util.deg2rad(eAngle);\n      v1 = new Vec3(cos(o2) * r, sin(o1) * r, 1);\n      v2 = new Vec3(cos(o1) * r, sin(o2) * r, 1);\n    } else if (eAngle < 90 && eAngle < sAngle) {\n      v1 = new Vec3(-r, -r, 1);\n      v2 = new Vec3(r, r, 1);\n    } else if (eAngle < 180 && eAngle >= 90) {\n      let o = Util.deg2rad(Math.min(180 - eAngle, sAngle));\n      let o1 = Util.deg2rad(sAngle);\n      let o2 = Util.deg2rad(180 - eAngle);\n      v1 = new Vec3(-cos(o2) * r, sin(o) * r, 1);\n      v2 = new Vec3(cos(o1) * r, r, 1);\n    } else if (eAngle < 270 && eAngle >= 180) {\n      let o1 = Util.deg2rad(sAngle);\n      let o2 = Util.deg2rad(eAngle - 180);\n      v1 = new Vec3(-r, -sin(o2) * r, 1);\n      v2 = new Vec3(cos(o1) * r, r, 1);\n    } else if (eAngle < 360 && eAngle >= 270) {\n      let o = Util.deg2rad(Math.min(360 - eAngle, sAngle));\n      v1 = new Vec3(-r, -r, 1);\n      v2 = new Vec3(cos(o) * r, r, 1);\n    }\n\n    let translateMat = Matrix3.translation(ox, oy);\n    let rotateMat = Matrix3.rotation(rotateAngle);\n    let mat = translateMat.multi(rotateMat);\n\n    v1.multiMatrix3(mat);\n    v2.multiMatrix3(mat);\n\n    if (v1.x < v2.x) {\n      [sx, ex] = [v1.x, v2.x];\n    } else {\n      [sx, ex] = [v2.x, v1.x];\n    }\n\n    if (v1.y < v2.y) {\n      [sy, ey] = [v1.y, v2.y];\n    } else {\n      [sy, ey] = [v2.y, v1.y];\n    }\n\n    return {\n      s1v: new Vec3(sx, sy, 1),\n      s2v: new Vec3(ex, sy, 1),\n      e1v: new Vec3(sx, ey, 1),\n      e2v: new Vec3(ex, ey, 1)\n    };\n  }\n\n  get width() {\n    let bounds = this.getBounds();\n    return Math.abs(bounds.ev.x - bounds.sv.x);\n  }\n\n  get height() {\n    let bounds = this.getBounds();\n    return Math.abs(bounds.ev.y - bounds.sv.y);\n  }\n}\n\nmodule.exports = Shape;\n","import DisplayObjectContainer from \"./DisplayObjectContainer\";\nimport DisplayObject from \"./DisplayObject\";\nimport Shape from \"./Shape\";\n\nclass Sprite extends DisplayObjectContainer {\n  constructor() {\n    super();\n    this.name = \"Sprite\";\n    this._graphics = null;\n  }\n\n  addChild(child) {\n    if (child instanceof Shape) {\n      console.error(\n        \"shape object should be linked to Sprite's graphics property\"\n      ); // jshint ignore:line\n    } else if (child instanceof Sprite && child.graphics) {\n      child.graphics.stage = this.stage;\n    }\n    super.addChild(child);\n  }\n\n  removeChild(child) {\n    if (child instanceof Shape) {\n      console.error(\n        \"shape object should be linked to Sprite's graphics property\"\n      ); // jshint ignore:line\n    } else {\n      super.removeChild(child);\n    }\n  }\n\n  show(matrix) {\n    let ctx = this.ctx || this.stage.ctx;\n    if (!super.show(matrix)) {\n      return false;\n    }\n\n    if (this._graphics && this._graphics.show) {\n      this._graphics.show(this._matrix);\n      ctx.restore();\n    }\n\n    return true;\n  }\n\n  isMouseOn(cord) {\n    let isMouseOn = super.isMouseOn(cord);\n    if (!isMouseOn && this._graphics && this._graphics instanceof Shape) {\n      isMouseOn = this._graphics.isMouseOn && this._graphics.isMouseOn(cord);\n    }\n    return isMouseOn;\n  }\n\n  set graphics(graphics) {\n    this._graphics = graphics;\n    this._graphics.stage = this.stage;\n    this._graphics.parent = this;\n    this._graphics.objectIndex = this.objectIndex + \"..\";\n  }\n\n  get graphics() {\n    return this._graphics;\n  }\n\n  get width() {\n    let shapeBounds = null;\n    let bounds = super.getBounds();\n    if (this._graphics instanceof Shape) {\n      shapeBounds = this._graphics.getBounds();\n    }\n\n    if (shapeBounds) {\n      bounds.sv.x =\n        bounds.sv.x < shapeBounds.sv.x ? bounds.sv.x : shapeBounds.sv.x;\n      bounds.ev.x =\n        bounds.ev.x > shapeBounds.ev.x ? bounds.ev.x : shapeBounds.ev.x;\n    }\n\n    return Math.abs(bounds.ev.x - bounds.sv.x);\n  }\n\n  get height() {\n    let shapeBounds = null;\n    let bounds = super.getBounds();\n    if (this._graphics instanceof Shape) {\n      shapeBounds = this._graphics.getBounds();\n    }\n\n    if (shapeBounds) {\n      bounds.sv.y =\n        bounds.sv.y < shapeBounds.sv.y ? bounds.sv.y : shapeBounds.sv.y;\n      bounds.ev.y =\n        bounds.ev.y > shapeBounds.ev.y ? bounds.ev.y : shapeBounds.ev.y;\n    }\n\n    return Math.abs(bounds.ev.y - bounds.sv.y);\n  }\n\n  get alpha() {\n    return this._alpha;\n  }\n\n  set alpha(alpha) {\n    if (alpha > 1) {\n      alpha = 1;\n    } else if (alpha < 0.001) {\n      alpha = 0;\n    }\n\n    this._alpha = alpha;\n    if (this._graphics) {\n      this._graphics.alpha = alpha;\n    }\n\n    for (let i = 0, len = this._childList.length; i < len; i += 1) {\n      this._childList[i].alpha = alpha;\n    }\n  }\n}\n\nmodule.exports = Sprite;\n","import DisplayObjectContainer from \"./DisplayObjectContainer\";\nimport Util from \"./Util\";\nimport EventDispatcher from \"./EventDispatcher\";\nimport Timer from \"./Timer\";\nimport TouchEvent from \"./TouchEvent\";\nimport Sprite from \"./Sprite\";\nimport Vec3 from \"./Vec3\";\n\nclass Stage extends DisplayObjectContainer {\n  constructor(instance, loop = true) {\n    super();\n\n    this.name = \"Stage\";\n    this.loop = loop;\n    if (instance.getContext) {\n      this.domElem = instance;\n      this.ctx = this.domElem.getContext(\"2d\");\n    } else {\n      this.ctx = instance;\n      this.domElem = instance.canvas;\n    }\n\n    this._width = parseFloat(this.domElem.width, 10);\n    this._height = parseFloat(this.domElem.height, 10);\n\n    let offset = this._getOffset();\n    this.x = offset.left;\n    this.y = offset.top;\n\n    this._initialize();\n  }\n\n  _initialize() {\n    Util.each(TouchEvent.nameList, eventName => {\n      eventName = TouchEvent[eventName];\n      EventDispatcher.prototype.on.call(\n        this,\n        this.domElem,\n        eventName,\n        event => {\n          this._touchEvent(event);\n        },\n        false\n      );\n    });\n\n    this.show(this._matrix);\n    if (this.loop) {\n      Timer.add(this);\n      Timer.start();\n    }\n  }\n\n  show(matrix) {\n    if (this.loop) {\n      this.ctx.clearRect(0, 0, this._width, this._height);\n    }\n\n    super.show(matrix);\n    this.ctx.restore();\n  }\n\n  dispose() {}\n\n  tick() {\n    this.show(this._matrix);\n  }\n\n  addChild(child) {\n    let addStage = child => {\n      child.stage = this;\n      if (child instanceof Sprite && child.graphics) {\n        child.graphics.stage = this;\n        child.graphics.parent = child;\n        child.graphics.objectIndex = child.objectIndex + \".0\";\n      }\n    };\n\n    addStage(child);\n    if (child.getAllChild) {\n      let childs = child.getAllChild();\n      Util.each(childs, item => {\n        addStage(item);\n      });\n    }\n\n    super.addChild(child);\n  }\n\n  isMouseOn() {\n    return true;\n  }\n\n  getBounds() {\n    return {\n      sv: new Vec3(0, 0, 1),\n      ev: new Vec3(this.width, this.height, 1)\n    };\n  }\n\n  _touchEvent(event) {\n    let cord = { x: 0, y: 0 };\n    cord.x = event.clientX - this.x;\n    cord.y = event.clientY - this.y;\n    event.cord = cord;\n\n    let eventName = event.type;\n    let item = TouchEvent.getTopItem(eventName, cord);\n    if (item) {\n      item.trigger(eventName, event);\n    }\n  }\n\n  _getOffset() {\n    return { top: 0, left: 0 };\n  }\n\n  get width() {\n    return this._width;\n  }\n\n  get height() {\n    return this._height;\n  }\n}\n\nmodule.exports = Stage;\n","module.exports = {\n  COMPLETE: \"complete\",\n  ERROR: \"error\"\n};\n","import Matrix3 from \"./Matrix3\";\n\nclass BitmapData {\n  constructor(width, height) {\n    let canvas = wx.createCanvas();\n    canvas.width = width;\n    canvas.height = height;\n\n    this._source = canvas;\n    this._ctx = canvas.getContext(\"2d\");\n    this._matrix = Matrix3.identity();\n    this._locked = false;\n    this._imageData = null;\n    this.width = width || 0;\n    this.height = height || 0;\n  }\n\n  clone() {\n    let bmd = new BitmapData(this.width, this.height);\n    bmd.draw(this._source, this._matrix);\n    return bmd;\n  }\n\n  dispose() {\n    this._source = null;\n    this._matrix = Matrix3.identity();\n    this._locked = false;\n    this.width = 0;\n    this.height = 0;\n  }\n\n  draw(source, matrix) {\n    if (this._locked) {\n      return;\n    }\n\n    this.width = source.width;\n    this.height = source.height;\n    this._ctx.drawImage(source, 0, 0);\n    this._imageData = null;\n    this._locked = false;\n\n    if (matrix instanceof Matrix3) {\n      this._matrix.multi(matrix);\n    }\n  }\n\n  getPixel(x, y) {\n    if (!this._ctx || x > this.width || y > this.height) {\n      return new ImageData(new Uint8ClampedArray(new Array(4), 0, 4), 1, 1); // jshint ignore:line\n    }\n\n    let imageData = null;\n    let data = null;\n    if (this._locked) {\n      let index = (x * this.width + this.height) * 4;\n      imageData = this._imageData;\n      data = imageData.data;\n      return new ImageData(\n        new Uint8ClampedArray(\n          [data[index], data[index + 1], data[index + 2], data[index + 3]],\n          0,\n          4\n        ),\n        1,\n        1\n      ); // jshint ignore:line\n    } else {\n      imageData = this._ctx.getImageData(x, y, 1, 1);\n      data = imageData.data;\n      return new ImageData(\n        new Uint8ClampedArray([data[0], data[1], data[2], 0], 0, 4),\n        1,\n        1\n      ); // jshint ignore:line\n    }\n  }\n\n  getPixel32(x, y) {\n    if (!this._ctx || x > this.width || y > this.height) {\n      return new ImageData(new Uint8ClampedArray([0, 0, 0, 0], 0, 4), 1, 1); // jshint ignore:line\n    }\n\n    if (this._locked) {\n      let imageData = this._imageData;\n      let data = imageData.data;\n      let index = (x * this.width + this.height) * 4;\n      return new ImageData(\n        new Uint8ClampedArray(\n          [data[index], data[index + 1], data[index + 2], data[index + 3]],\n          0,\n          4\n        ),\n        1,\n        1\n      ); // jshint ignore:line\n    } else {\n      return this._ctx.getImageData(x, y, 1, 1);\n    }\n  }\n\n  getPixels(x, y, width, height) {\n    if (!this._ctx || x > this.width || y > this.height) {\n      return new ImageData(new Uint8ClampedArray([0, 0, 0, 0], 0, 4), 1, 1); // jshint ignore:line\n    }\n\n    width = x + width > this.width ? this.width - x : width;\n    height = y + height > this.height ? this.height - y : height;\n\n    if (this._locked) {\n      let imageData = this._imageData;\n      let data = imageData.data;\n      let tmp = [];\n      for (let i = 0; i < height; i += 1) {\n        let startIndex = (y + i) * this.height + x;\n        for (let j = 0; j < width; j += 1) {\n          let index = (startIndex + j) * 4;\n          tmp.push(\n            data[index],\n            data[index + 1],\n            data[index + 2],\n            data[index + 3]\n          );\n        }\n      }\n      return new ImageData(\n        new Uint8ClampedArray(tmp, 0, tmp.length),\n        width,\n        height\n      ); // jshint ignore:line\n    } else {\n      return this._ctx.getImageData(x, y, width, height);\n    }\n  }\n\n  setPixel(x, y, imageData) {\n    let _ctx = this._ctx;\n    if (!_ctx || !imageData) {\n      return;\n    }\n\n    if (this._locked) {\n      let index = (x * this.width + y) * 4;\n      let data = this._imageData.data;\n      data[index] = imageData.data[0];\n      data[index + 1] = imageData.data[1];\n      data[index + 2] = imageData.data[2];\n    } else {\n      let tmp = this.getPixels(x, y, 1, 1);\n      tmp.data[0] = imageData.data[0];\n      tmp.data[1] = imageData.data[1];\n      tmp.data[2] = imageData.data[2];\n      _ctx.putImageData(tmp, x, y, 0, 0, 1, 1);\n    }\n  }\n\n  setPixel32(x, y, imageData) {\n    let _ctx = this._ctx;\n    if (!_ctx || !imageData) {\n      return;\n    }\n\n    if (this._locked) {\n      let index = (x * this.width + y) * 4;\n      let data = this._imageData.data;\n      data[index] = imageData.data[0];\n      data[index + 1] = imageData.data[1];\n      data[index + 2] = imageData.data[2];\n      data[index + 3] = imageData.data[3];\n    } else {\n      let tmp = this.getPixels(x, y, 1, 1);\n      tmp.data[0] = imageData.data[0];\n      tmp.data[1] = imageData.data[1];\n      tmp.data[2] = imageData.data[2];\n      tmp.data[3] = imageData.data[3];\n      _ctx.putImageData(tmp, x, y, 0, 0, 1, 1);\n    }\n  }\n\n  setPixels(x, y, width, height, imageData) {\n    let _ctx = this._ctx;\n    if (!_ctx || x > this.width || y > this.height || !imageData) {\n      return;\n    }\n\n    width = x + width > this.width ? this.width - x : width;\n    height = y + height > this.height ? this.height - y : height;\n\n    if (this._locked) {\n      let data = this._imageData.data;\n      for (let i = 0; i < height; i += 1) {\n        let startIndex = (y + i) * this.height + x;\n        for (let j = 0; j < width; j += 1) {\n          let index = (i * height + j) * 4;\n          for (let m = 0; m < 4; m += 1) {\n            data[(startIndex + j) * 4 + m] = imageData.data[index + m];\n          }\n        }\n      }\n    } else {\n      let tmp = this.getPixels(x, y, width, height);\n      for (let i = 0; i < height; i += 1) {\n        for (let j = 0; j < width; j += 1) {\n          let index = (i * height + j) * 4;\n          for (let m = 0; m < 4; m += 1) {\n            tmp.data[index + m] = imageData.data[index + m];\n          }\n        }\n      }\n\n      _ctx.putImageData(tmp, x, y, 0, 0, width, height);\n    }\n  }\n\n  lock() {\n    this._locked = true;\n    this._imageData = this._ctx.getImageData(0, 0, this.width, this.height);\n  }\n\n  unlock() {\n    this._locked = false;\n    if (this._imageData) {\n      this._ctx.putImageData(this._imageData, 0, 0);\n    }\n    this._imageData = null;\n  }\n}\n\nmodule.exports = BitmapData;\n","import DisplayObjectContainer from \"./DisplayObjectContainer\";\nimport LoaderEvent from \"./LoaderEvent\";\nimport Util from \"./Util\";\nimport BitmapData from \"./BitmapData\";\n\nclass Loader extends DisplayObjectContainer {\n  constructor() {\n    super();\n    this.content = wx.createImage();\n    this._close = false;\n    this._loading = false;\n    this._queue = [];\n  }\n\n  on(eventName, callback) {\n    super.on.call(this, eventName, callback, false);\n  }\n\n  off(eventName, callback) {\n    super.off.call(this, eventName, callback);\n  }\n\n  toBitmapData(matrix) {\n    let bmd = new BitmapData(this.content.width, this.content.height);\n    bmd.draw(this.content, matrix);\n    return bmd;\n  }\n\n  load(request) {\n    let params = [];\n    request.method = request.method.toUpperCase();\n    if (request === null) {\n      console.error(\"Loader need URLRequest instance\"); // jshint ignore:line\n      return;\n    }\n\n    if (this._loading) {\n      this._queue.push(request);\n      return;\n    }\n\n    let url = request.url;\n    let data = request.data;\n    let keys = Util.keys(request.data);\n    if (keys.length) {\n      params = Util.map(request.data, (val, key) => {\n        return key + \"=\" + encodeURIComponent(val);\n      });\n      data = params.join(\"&\");\n    }\n\n    if (request.method === \"GET\") {\n      if (keys.length) {\n        url += \"?\" + data;\n      }\n      data = null;\n    }\n\n    this.content.onload = () => {\n      this._onload();\n    };\n\n    this.content.onerror = () => {\n      this._onerror();\n    };\n\n    this.content.src = url;\n    this._loading = true;\n  }\n\n  close() {\n    this._close = true;\n  }\n\n  _onload() {\n    if (!this._close) {\n      this.trigger(this, LoaderEvent.COMPLETE, {\n        target: this\n      });\n    }\n\n    this._close = false;\n    this._loading = false;\n    this._next();\n  }\n\n  _onerror(ev) {\n    if (!this._close) {\n      this.trigger(this, LoaderEvent.ERROR, ev);\n    }\n\n    this._close = false;\n    this._loading = false;\n    this._next();\n  }\n\n  _next() {\n    if (this._queue.length) {\n      this.load(this._queue.shift());\n    }\n  }\n}\n\nmodule.exports = Loader;\n","import InteractiveObject from \"./InteractiveObject\";\nimport Global from \"./Global\";\nimport Util from \"./Util\";\nimport Vec3 from \"./Vec3\";\nimport Matrix3 from \"./Matrix3\";\n\nclass Bitmap extends InteractiveObject {\n  constructor(bitmapData) {\n    if (!bitmapData) {\n      console.error(\"bitmapData must not be empty\"); // jshint ignore:line\n      return;\n    }\n\n    super();\n    this.name = \"Bitmap\";\n    this._bitmapData = bitmapData;\n    this._height = bitmapData.height || 0;\n    this._width = bitmapData.width || 0;\n  }\n\n  show(matrix) {\n    let ctx = this.ctx || this.stage.ctx;\n    if (!super.show(matrix)) {\n      return false;\n    }\n\n    let bitmapData = this._bitmapData;\n    let source = bitmapData._source;\n    if (source) {\n      matrix = bitmapData._matrix.getMatrix();\n      ctx.transform(\n        matrix[0],\n        matrix[1],\n        matrix[3],\n        matrix[4],\n        matrix[6],\n        matrix[7]\n      );\n      ctx.drawImage(source, 0, 0);\n    }\n\n    return true;\n  }\n\n  isMouseOn(cord) {\n    let vec = new Vec3(cord.x, cord.y, 1);\n    let matrix = this._matrix.multi(this._bitmapData._matrix);\n    let inverse = Matrix3.inverse(matrix);\n    let area = [\n      [0, 0],\n      [this._width, 0],\n      [this._width, this._height],\n      [0, this._height]\n    ];\n\n    vec.multiMatrix3(inverse);\n    return Util.pip([vec.x, vec.y], area);\n  }\n\n  getBounds() {\n    let sx = Global.maxNumber;\n    let ex = Global.minNumber;\n    let sy = Global.maxNumber;\n    let ey = Global.minNumber;\n    let area = [\n      [0, 0],\n      [this._width, 0],\n      [this._width, this._height],\n      [0, this._height]\n    ];\n\n    let matrix = this._matrix.multi(this._bitmapData._matrix);\n    let vec3s = Util.map(area, item => {\n      let vec = new Vec3(item[0], item[1], 1);\n      return vec.multiMatrix3(matrix);\n    });\n\n    Util.each(vec3s, item => {\n      sx = item.x < sx ? item.x : sx;\n      ex = item.x > ex ? item.x : ex;\n      sy = item.y < sy ? item.y : sy;\n      ey = item.y > ey ? item.y : ey;\n    });\n\n    if (\n      sx === Global.maxNumber ||\n      ex === Global.minNumber ||\n      sy === Global.maxNumber ||\n      ey === Global.minNumber\n    ) {\n      sx = sy = ex = ey = 0;\n    }\n\n    return {\n      sv: new Vec3(sx, sy, 1),\n      ev: new Vec3(ex, ey, 1)\n    };\n  }\n\n  get width() {\n    return this._bitmapData.width;\n  }\n\n  get height() {\n    return this._bitmapData.height;\n  }\n}\n\nmodule.exports = Bitmap;\n","module.exports = {\n  COMPLETE: \"complete\",\n  ERROR: \"error\"\n};\n","import EventDispatcher from \"./EventDispatcher\";\nimport URLLoaderEvent from \"./URLLoaderEvent\";\nimport Util from \"./Util\";\n\nclass URLLoader extends EventDispatcher {\n  constructor(request) {\n    super();\n    this._request = request;\n    this._close = false;\n    this._loading = false;\n    this._queue = [];\n  }\n\n  on(eventName, callback) {\n    super.on.apply(this, [this, eventName, callback, false]);\n  }\n\n  off(eventName, callback) {\n    super.off.apply(this, [this, eventName, callback]);\n  }\n\n  load(request) {\n    let xhr = false;\n    let params = [];\n    request = request || this._request;\n    request.method = request.method.toUpperCase();\n\n    if (request === null) {\n      console.error(\"URLLoader need URLRequest instance\"); // jshint ignore:line\n      return xhr;\n    }\n\n    if (this._loading) {\n      this._queue.push(request);\n      return xhr;\n    }\n\n    // jshint ignore:start\n    try {\n      xhr = new XMLHttpRequest();\n    } catch (e) {}\n    // jshint ignore:end\n\n    if (xhr === false) {\n      console.error(\"xhr cant be init\"); // jshint ignore:line\n      return xhr;\n    }\n\n    this._xhr = xhr;\n\n    let url = request.url;\n    let data = request.data;\n    let keys = Util.keys(request.data);\n    if (keys.length) {\n      params = Util.map(request.data, (val, key) => {\n        return key + \"=\" + encodeURIComponent(val);\n      });\n      data = params.join(\"&\");\n    }\n\n    if (request.method === \"GET\") {\n      if (keys.length) {\n        url += \"?\" + data;\n      }\n      data = null;\n    }\n\n    xhr.open(request.method, url, true);\n    xhr.onreadystatechange = () => {\n      this._onreadystatechange();\n    };\n\n    if (request.contentType) {\n      request.requestHeaders[\"Content-Type\"] = request.contentType;\n    }\n\n    Util.each(request.requestHeaders, (val, key) => {\n      xhr.setRequestHeader(key, val);\n    });\n\n    xhr.send(data);\n    this._loading = true;\n  }\n\n  close() {\n    this._close = true;\n  }\n\n  _onreadystatechange() {\n    let xhr = this._xhr;\n    let eventName = \"\";\n\n    if (xhr.readyState === 4) {\n      if (!this._close) {\n        if (xhr.status === 200) {\n          eventName = URLLoaderEvent.COMPLETE;\n        } else {\n          eventName = URLLoaderEvent.ERROR;\n        }\n        this.trigger(this, eventName, {\n          data: xhr.responseText,\n          status: xhr.status\n        });\n      }\n\n      this._close = false;\n      this._loading = false;\n      this._next();\n    }\n  }\n\n  _next() {\n    if (this._queue.length) {\n      this.load(this._queue.shift());\n    }\n  }\n}\n\nmodule.exports = URLLoader;\n","class URLRequest {\n  constructor(url) {\n    this.url = url || \"\";\n    this.data = {};\n    this.method = \"GET\";\n    this.requestHeaders = {};\n    this.contentType = \"\";\n  }\n}\n\nmodule.exports = URLRequest;\n","import InteractiveObject from \"./InteractiveObject\";\nimport Event from \"./Event\";\nimport Util from \"./Util\";\nimport Matrix3 from \"./Matrix3\";\nimport Vec3 from \"./Vec3\";\nimport Global from \"./Global\";\n\nexport default class Label extends InteractiveObject {\n  constructor() {\n    super();\n    this.name = \"Label\";\n    this._color = \"#000000\";\n    this._textAlign = \"left\";\n    this._text = \"\";\n    this._textBaseline = \"alphabetic\"; // equal to baseline\n    this._font = \"arial\";\n    this._size = 12;\n    this._wordWrap = false;\n    this._fontHeight = 0;\n    this._fillX = 0;\n    this._areas = [];\n    this._bindEvents();\n  }\n\n  show(matrix) {\n    if (!super.show(matrix)) {\n      return false;\n    }\n\n    let ctx = this.ctx || this.stage.ctx;\n    ctx.strokeStyle = this._color;\n    ctx.fillStyle = this._color;\n    ctx.font = this._size + \"px \" + this._font;\n    ctx.textAlign = this._textAlign;\n    ctx.textBaseline = this._textBaseline;\n\n    let text = this._text;\n    let areas = this._areas;\n    let fontHeight = this._fontHeight;\n    for (let i = 1, len = this._areas.length; i < len; i += 1) {\n      ctx.fillText(\n        text.slice(areas[i - 1], areas[i]),\n        this._fillX,\n        i * fontHeight\n      );\n    }\n\n    return true;\n  }\n\n  isMouseOn(cord) {\n    let vec = new Vec3(cord.x, cord.y, 1);\n    let inverse = Matrix3.inverse(this._matrix);\n    let area = [\n      [0, 0],\n      [this._width, 0],\n      [this._width, this._height],\n      [0, this._height]\n    ];\n\n    vec.multiMatrix3(inverse);\n    return Util.pip([vec.x, vec.y], area);\n  }\n\n  getBounds() {\n    let sx = Global.maxNumber;\n    let ex = Global.minNumber;\n    let sy = Global.maxNumber;\n    let ey = Global.minNumber;\n    let area = [\n      [0, 0],\n      [this._width, 0],\n      [this._width, this._height],\n      [0, this._height]\n    ];\n\n    let matrix = this._matrix;\n    let vec3s = Util.map(area, item => {\n      let vec = new Vec3(item[0], item[1], 1);\n      return vec.multiMatrix3(matrix);\n    });\n\n    Util.each(vec3s, item => {\n      sx = item.x < sx ? item.x : sx;\n      ex = item.x > ex ? item.x : ex;\n      sy = item.y < sy ? item.y : sy;\n      ey = item.y > ey ? item.y : ey;\n    });\n\n    if (\n      sx === Global.maxNumber ||\n      ex === Global.minNumber ||\n      sy === Global.maxNumber ||\n      ey === Global.minNumber\n    ) {\n      sx = sy = ex = ey = 0;\n    }\n\n    return {\n      sv: new Vec3(sx, sy, 1),\n      ev: new Vec3(ex, ey, 1)\n    };\n  }\n\n  _bindEvents() {\n    this.on(Event.ADD_TO_STAGE, () => {\n      this._compute();\n    });\n  }\n\n  _compute() {\n    let textLen = this._text.length;\n    this._fontHeight = this._computeLineHeight();\n    this._areas = [];\n    if (this._wordWrap) {\n      this._areas = this._areas.concat(0, this._computeAreas(), textLen);\n    } else {\n      this._areas.push(0, this._text.length);\n    }\n  }\n\n  _computeLineHeight() {\n    return (\n      wx.getTextLineHeight({\n        text: \"Hg\",\n        fontWeight: \"normal\",\n        fontStyle: \"normal\",\n        fontFamily: this._font,\n        fontSize: this._size\n      }) || this._height * 1.2\n    );\n  }\n\n  _computeAreas() {\n    let cache = {};\n    let ctx = this.ctx || this.stage.ctx;\n    let text = this._text;\n    let tWidth = this._width;\n    let count = 0;\n    let areas = [];\n\n    ctx.strokeStyle = this._color;\n    ctx.fillStyle = this._color;\n    ctx.font = this._size + \"px \" + this._font;\n    ctx.textAlign = this._textAlign;\n    ctx.textBaseline = this._textBaseline;\n\n    for (let i = 0, len = text.length; i < len; i += 1) {\n      let char = text.charAt(i);\n      let width = 0;\n\n      if (char === \"\\n\") {\n        count = 0;\n        areas.push(i);\n        continue;\n      }\n\n      if (cache[char]) {\n        width = cache[char];\n      } else {\n        width = ctx.measureText(char).width;\n      }\n\n      count += width;\n      if (count >= tWidth) {\n        count = 0;\n        areas.push((i -= 1));\n      }\n    }\n\n    return areas;\n  }\n\n  get color() {\n    return this._color;\n  }\n\n  set color(color) {\n    this._color = color;\n  }\n\n  get textAlign() {\n    return this._textAlign;\n  }\n\n  set textAlign(textAlign) {\n    this._textAlign = textAlign;\n\n    // jshint ignore: start\n    switch (textAlign) {\n      case \"end\":\n      case \"right\":\n        this._fillX = this._width;\n        break;\n      case \"center\":\n        this._fillX = this._width / 2;\n        break;\n      case \"start\":\n      case \"left\":\n      default:\n        this._fillX = 0;\n        break;\n    }\n    // jshint ignore: end\n  }\n\n  get textBaseline() {\n    return this._textBaseline;\n  }\n\n  set textBaseline(textBaseline) {\n    this._textBaseline = textBaseline;\n  }\n\n  get size() {\n    return this._size;\n  }\n\n  set size(size) {\n    this._size = size;\n    if (this._addedToStage) {\n      this._compute();\n    }\n  }\n\n  get font() {\n    return this._font;\n  }\n\n  set font(font) {\n    this._font = font;\n    if (this._addedToStage) {\n      this._compute();\n    }\n  }\n\n  get wordWrap() {\n    return this._wordWrap;\n  }\n\n  set wordWrap(wordWrap) {\n    this._wordWrap = wordWrap;\n    if (this._addedToStage) {\n      this._compute();\n    }\n  }\n\n  get text() {\n    return this._text;\n  }\n\n  set text(text) {\n    this._text = (\"\" + text).replace(\"\\r\\n\", \"\\n\");\n    if (this._addedToStage) {\n      this._compute();\n    }\n  }\n\n  // jshint ignore: start\n\n  set width(width) {\n    this._width = width;\n  }\n\n  set height(height) {\n    this._height = height;\n  }\n  // jshint ignore: end\n}\n","module.exports = {\n  easeInSine: { a: { x: 0.47, y: 0 }, b: { x: 0.745, y: 0.715 } },\n  easeOutSine: { a: { x: 0.39, y: 0.575 }, b: { x: 0.565, y: 1 } },\n  easeInOutSine: { a: { x: 0.445, y: 0.05 }, b: { x: 0.55, y: 0.95 } },\n  easeInQuad: { a: { x: 0.55, y: 0.085 }, b: { x: 0.68, y: 0.53 } },\n  easeOutQuad: { a: { x: 0.25, y: 0.46 }, b: { x: 0.45, y: 0.94 } },\n  easeInOutQuad: { a: { x: 0.455, y: 0.03 }, b: { x: 0.515, y: 0.955 } },\n  easeInCubic: { a: { x: 0.55, y: 0.055 }, b: { x: 0.675, y: 0.19 } },\n  easeOutCubic: { a: { x: 0.215, y: 0.61 }, b: { x: 0.355, y: 1 } },\n  easeInOutCubic: { a: { x: 0.645, y: 0.045 }, b: { x: 0.355, y: 1 } },\n  easeInQuart: { a: { x: 0.895, y: 0.03 }, b: { x: 0.685, y: 0.22 } },\n  easeOutQuart: { a: { x: 0.165, y: 0.84 }, b: { x: 0.44, y: 1 } },\n  easeInOutQuart: { a: { x: 0.77, y: 0 }, b: { x: 0.0175, y: 1 } },\n  easeInQuint: { a: { x: 0.755, y: 0.05 }, b: { x: 0.855, y: 0.06 } },\n  easeOutQuint: { a: { x: 0.23, y: 1 }, b: { x: 0.32, y: 1 } },\n  easeInOutQuint: { a: { x: 0.86, y: 0 }, b: { x: 0.07, y: 1 } },\n  easeInExpo: { a: { x: 0.95, y: 0.05 }, b: { x: 0.795, y: 0.035 } },\n  easeOutExpo: { a: { x: 0.19, y: 1 }, b: { x: 0.22, y: 1 } },\n  easeInOutExpo: { a: { x: 1, y: 0 }, b: { x: 0, y: 1 } },\n  easeInCirc: { a: { x: 0.6, y: 0.04 }, b: { x: 0.98, y: 0.335 } },\n  easeOutCirc: { a: { x: 0.075, y: 0.82 }, b: { x: 0.165, y: 1 } },\n  easeInOutCirc: { a: { x: 0.785, y: 0.135 }, b: { x: 0.15, y: 0.86 } },\n  easeInBack: { a: { x: 0.6, y: -0.28 }, b: { x: 0.735, y: 0.045 } },\n  easeOutBack: { a: { x: 0.175, y: 0.885 }, b: { x: 0.32, y: 1.275 } },\n  easeInOutBack: { a: { x: 0.68, y: -0.55 }, b: { x: 0.265, y: 1.55 } }\n};\n","import Util from \"./Util\";\nimport Easing from \"./Easing\";\nimport Timer from \"./Timer\";\n\nexport default class Animate {\n  static to(target, params) {\n    if (!Util.isType(params, \"Object\")) {\n      return;\n    }\n\n    this._addQueue({\n      target: target,\n      args: this._init.call(this, ...arguments)\n    });\n  }\n\n  static from(target, params) {\n    if (!Util.isType(params, \"Object\")) {\n      return;\n    }\n\n    for (let key in params) {\n      if (\n        params.hasOwnProperty(key) &&\n        key !== \"onComplete\" &&\n        key !== \"onCompleteParam\"\n      ) {\n        let tmp = parseFloat(target[key]);\n        target[key] = params[key];\n        params[key] = tmp;\n      }\n    }\n\n    arguments[1] = params;\n    this._addQueue({\n      target: target,\n      args: this._init.call(this, ...arguments)\n    });\n  }\n\n  static fromTo(target, fParams, tParams) {\n    if (!Util.isType(tParams, \"Object\") || !Util.isType(fParams, \"Object\")) {\n      return;\n    }\n\n    for (let key in fParams) {\n      if (\n        fParams.hasOwnProperty(key) &&\n        key !== \"onComplete\" &&\n        key !== \"onCompleteParam\"\n      ) {\n        target[key] = fParams[key];\n      }\n    }\n\n    Array.prototype.splice.call(arguments, 1, 1);\n    this._addQueue({\n      target: target,\n      args: this._init.call(this, ...arguments)\n    });\n  }\n\n  static remove(animator) {\n    let index = Util.inArray(animator, this._animators, (animator, item) => {\n      return animator === item.target;\n    });\n\n    if (index !== -1) {\n      this._animators.splice(index, 1);\n    }\n  }\n\n  static resume(target) {\n    let index = Util.inArray(target, this._pausedAnimators, (target, item) => {\n      return target === item.target;\n    });\n\n    if (index > -1) {\n      let item = this._pausedAnimators.splice(index, 1);\n      item[0].timestamp = +new Date();\n      this._animators.push(item[0]);\n      this._animate();\n    }\n  }\n\n  static pause(target) {\n    let index = Util.inArray(target, this._animators, (target, item) => {\n      return target === item.target;\n    });\n\n    if (index > -1) {\n      let item = this._animators.splice(index, 1);\n      this._pausedAnimators.push(item[0]);\n    }\n  }\n\n  static start() {\n    Util.each(this._animators, animators => {\n      animators.timestamp = +new Date();\n    });\n    this._animate();\n  }\n\n  static stop() {\n    this._isAnimated = false;\n    Timer.remove(this);\n  }\n\n  static _init(target, params) {\n    let attr = {};\n    let fn = null;\n    let fnParams = [];\n    let type = {};\n    let speed = 0;\n    let val = [];\n\n    for (let item in params) {\n      if (params.hasOwnProperty(item)) {\n        if (item === \"onComplete\") {\n          fn = params[item];\n        } else if (item === \"onCompleteParam\") {\n          fnParams = params[item];\n        } else {\n          attr[item] = params[item];\n        }\n      }\n    }\n\n    type = arguments[2];\n    if (typeof type === \"object\" && type.a && type.b) {\n      type = arguments[2] || Easing.easeInSine;\n      speed = arguments[3] || 1000;\n      fn = fn || arguments[4];\n      fnParams = fnParams || arguments[5];\n    } else {\n      type = Easing.easeInSine;\n      speed = arguments[2] || 1000;\n      fn = fn || arguments[3];\n      fnParams = fnParams || arguments[4];\n    }\n\n    val.push(target, attr, type, speed, fn, fnParams);\n\n    return val;\n  }\n\n  static _addQueue(animator) {\n    let target = animator.target;\n    let params = animator.args[1];\n\n    animator.shouldStop = false;\n    animator.timeCount = 0;\n    animator.origin = {};\n\n    for (let key in params) {\n      if (params.hasOwnProperty(key)) {\n        animator.origin[key] = target[key];\n      }\n    }\n\n    animator.timestamp = +new Date();\n    this._animators.push(animator);\n    this._animate();\n  }\n\n  static _cubicBezier(type, t) {\n    let pa = { x: 0, y: 0 };\n    let pb = type.a;\n    let pc = type.b;\n    let pd = { x: 1, y: 1 };\n\n    return {\n      x:\n        pa.x * Math.pow(1 - t, 3) +\n        3 * pb.x * t * Math.pow(1 - t, 2) +\n        3 * pc.x * Math.pow(t, 2) * (1 - t) +\n        pd.x * Math.pow(t, 3),\n      y:\n        pa.y * Math.pow(1 - t, 3) +\n        3 * pb.y * t * Math.pow(1 - t, 2) +\n        3 * pc.y * Math.pow(t, 2) * (1 - t) +\n        pd.y * Math.pow(t, 3)\n    };\n  }\n\n  static _animate() {\n    if (!this._isAnimated) {\n      this._isAnimated = true;\n      Timer.add(this);\n    }\n  }\n\n  static tick() {\n    let renderTime = 1000 / 60;\n    if (!this._animators.length || !this._isAnimated) {\n      this.stop();\n      return;\n    }\n\n    Util.each(this._animators, animator => {\n      let [target, attrs, type, speed, fn, fnParams] = animator.args;\n      let timestamp = +new Date();\n      let timeCount = (animator.timeCount += timestamp - animator.timestamp);\n      let shouldStop = (animator.shouldStop =\n        speed - timeCount <= renderTime || timeCount > speed);\n      let origin = animator.origin;\n      let scale = this._cubicBezier(type, shouldStop ? 1 : timeCount / speed);\n      for (let key in attrs) {\n        if (attrs.hasOwnProperty(key)) {\n          target[key] = origin[key] + (attrs[key] - origin[key]) * scale.y;\n        }\n      }\n\n      if (shouldStop) {\n        if (typeof fn === \"function\") {\n          fn.call(target, fnParams);\n        }\n      }\n\n      animator.timestamp = +new Date();\n    });\n\n    for (let i = this._animators.length - 1; i >= 0; i -= 1) {\n      if (this._animators[i].shouldStop) {\n        this._animators.splice(i, 1);\n      }\n    }\n  }\n\n  static get _animators() {\n    this._animators_ = this._animators_ || [];\n    return this._animators_;\n  }\n\n  static get _pausedAnimators() {\n    this._pausedAnimators_ = this._pausedAnimators_ || [];\n    return this._pausedAnimators_;\n  }\n\n  static get _isAnimated() {\n    this._isAnimated_ = this._isAnimated_ || false;\n    return this._isAnimated_;\n  }\n\n  static set _isAnimated(isAnimated) {\n    this._isAnimated_ = isAnimated;\n  }\n}\n","import Vec3 from \"./Vec3\";\nimport Matrix3 from \"./Matrix3\";\nimport Util from \"./Util\";\nimport Timer from \"./Timer\";\nimport Event from \"./Event\";\nimport InteractiveEvent from \"./InteractiveEvent\";\nimport TouchEvent from \"./TouchEvent\";\nimport EventDispatcher from \"./EventDispatcher\";\nimport DisplayObject from \"./DisplayObject\";\nimport InteractiveObject from \"./InteractiveObject\";\nimport DisplayObjectContainer from \"./DisplayObjectContainer\";\nimport Stage from \"./Stage\";\nimport Sprite from \"./Sprite\";\nimport Shape from \"./Shape\";\nimport LoaderEvent from \"./LoaderEvent\";\nimport Loader from \"./Loader\";\nimport Bitmap from \"./Bitmap\";\nimport BitmapData from \"./BitmapData\";\nimport URLLoaderEvent from \"./URLLoaderEvent\";\nimport URLLoader from \"./URLLoader\";\nimport URLRequest from \"./URLRequest\";\nimport Label from \"./Label\";\nimport Easing from \"./Easing\";\nimport Animate from \"./Animate\";\n\nwindow.Moco = module.exports = {\n  Vec3: Vec3,\n  Matrix3: Matrix3,\n  Util: Util,\n  Timer: Timer,\n  Event: Event,\n  InteractiveEvent: InteractiveEvent,\n  TouchEvent: TouchEvent,\n  EventDispatcher: EventDispatcher,\n  DisplayObject: DisplayObject,\n  InteractiveObject: InteractiveObject,\n  DisplayObjectContainer: DisplayObjectContainer,\n  Stage: Stage,\n  Sprite: Sprite,\n  Shape: Shape,\n  LoaderEvent: LoaderEvent,\n  Loader: Loader,\n  Bitmap: Bitmap,\n  BitmapData: BitmapData,\n  URLLoaderEvent: URLLoaderEvent,\n  URLLoader: URLLoader,\n  URLRequest: URLRequest,\n  Label: Label,\n  Easing: Easing,\n  Animate: Animate\n};\n"]}